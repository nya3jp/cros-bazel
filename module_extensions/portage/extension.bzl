# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")
load("//bazel:repo/cipd.bzl", "cipd_file")
load("//bazel:repo/gs.bzl", "gs_file")
load("//bazel:repo/repo_repository.bzl", "repo_repository")
load("//bazel/chrome:cros_chrome_repository.bzl", "cros_chrome_repository")
load("//bazel/module_extensions/portage:alchemist.bzl", "alchemist")
load("//bazel/module_extensions/portage:portage.bzl", _portage = "portage")
load("//bazel/module_extensions/portage:portage_digest.bzl", "portage_digest")
load("//bazel/module_extensions/private:hub_repo.bzl", "hub_repo")

"""Module extensions to generate the @portage repo.

We have to split this into 2 extensions, because module extensions cannot read
any files generated by repos declared in their own module extension (this would
create circular dependencies). However, they can read files generated by repos
declared in other module extensions."""

def _portage_impl(module_ctx):
    alchemist(name = "alchemist")
    portage_digest(
        name = "portage_digest",
        alchemist = "@alchemist//:alchemist",
    )

    _portage(
        name = "portage",
        board = "@portage_digest//:board",
        profile = "@portage_digest//:profile",
        digest = "@portage_digest//:digest",
        alchemist = "@alchemist//:alchemist",
    )

portage = module_extension(
    implementation = _portage_impl,
)

def _portage_deps_impl(module_ctx):
    deps_path = module_ctx.path(Label("@portage//:deps.json"))

    deps = json.decode(module_ctx.read(deps_path))

    aliases = {}
    for repo in deps:
        for rule, kwargs in repo.items():
            name = kwargs["name"]
            if rule == "HttpFile":
                http_file(**kwargs)
                aliases[name] = "@%s//file" % name
            elif rule == "GsFile":
                gs_file(**kwargs)
                aliases[name] = "@%s//file" % name
            elif rule == "RepoRepository":
                repo_repository(**kwargs)
                aliases["%s_src" % name] = "@%s//:src" % name
            elif rule == "CipdFile":
                cipd_file(**kwargs)
                aliases[name] = "@%s//file" % name
            elif rule == "CrosChromeRepository":
                cros_chrome_repository(**kwargs)
                aliases["%s_src" % name] = "@%s//:src" % name
                aliases["%s_src_internal" % name] = "@%s//:src_internal" % name
            else:
                fail("Unknown rule %s" % rule)

    hub_repo(
        name = "portage_deps",
        aliases = aliases,
        symlinks = {},
        visibility = ["@portage//:all_packages"],
    )

portage_deps = module_extension(
    implementation = _portage_deps_impl,
)
