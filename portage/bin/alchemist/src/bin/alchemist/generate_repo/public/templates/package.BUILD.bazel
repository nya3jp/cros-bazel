# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@//bazel/build_defs:always_fail.bzl", "always_fail")

{%- for alias in aliases %}
alias(
    name = "{{ alias.name }}",
    actual = {% if alias.actual.Single -%}
    "{{ alias.actual.Single }}"
    {%- elif alias.actual.Select -%}
    select({
        {%- for pair in alias.actual.Select %}
        "{{ pair[0] }}": "{{ pair[1] }}",
        {%- endfor %}
    })
    {%- endif %},
    visibility = ["@//bazel:internal"],
)

{%- endfor %}

{%- if ebuild_failures %}
always_fail(
    name = "failure",
    message = "\n--\nSome of ebuilds failed to analyze! Aborting the build " +
              "to prevent possibly incorrect ebuild selection." +
              "\ntarget: @" + repository_name() + "/" + package_name() +
              "\nList of failures below:\n" +
{%- for ebuild_failure in ebuild_failures %}
              "\n** {{ ebuild_failure.name }} **\n" +
              """{{ ebuild_failure.error }}""" +
{%- endfor %}
              "\n--\n",
    visibility = ["@//bazel:internal"],
)
{%- endif %}

{%- for test_suite in test_suites %}
test_suite(
    name = "{{ test_suite.name }}",
    tests = [ "{{ test_suite.test_name }}" ],
    visibility = ["@//bazel:internal"],
)
{%- endfor %}
