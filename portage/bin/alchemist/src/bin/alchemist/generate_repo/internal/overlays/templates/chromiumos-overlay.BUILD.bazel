# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@rules_pkg//pkg:mappings.bzl", "pkg_attributes", "pkg_files", "strip_prefix")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@//bazel/portage/build_defs:overlay.bzl", "overlay")

# The list of files that are only needed when invoking emerge. We don't need
# these when building a package since alchemist has performed the analysis.
ANALYSIS_FILE_PATTERN = [
    "profiles/**/package.accept_keywords",
    "profiles/**/package.keywords",
    "profiles/**/package.mask",
    "profiles/**/package.provided",
    "profiles/**/package.unmask",
]

# We strip the BINHOST variables from the make.conf because they change
# every time the SDK builder runs. We don't use this variable when building
# portage packages, so we can remove it and avoid cache busting all the builds.
genrule(
    name = "amd64-host-make-conf",
    srcs = ["chromeos/config/make.conf.amd64-host"],
    outs = ["make.conf.amd64-host"],
    cmd = "sed -e '/^FULL_BINHOST=/d' -e '/^PORTAGE_BINHOST=/d' '$<' > '$@'",
)

pkg_files(
    name = "amd64-host-files",
    srcs = [
        ":amd64-host-make-conf"
    ],
    prefix = "{{ mount_path }}/chromeos/config",
    strip_prefix = strip_prefix.from_pkg(),
    visibility = ["//visibility:private"],
)

pkg_files(
    name = "files",
    srcs = [
        "metadata/layout.conf",
    ] + glob([
        "chromeos/**",
        "licenses/**",
        "profiles/**",
        # HACK: Include CrOS-specific bashrc files that override profile vars
        # and several other files referenced by them.
        #
        # See cros_stack_bashrc in this file for details:
        # https://source.corp.google.com/chromeos_public/src/third_party/chromiumos-overlay/profiles/base/profile.bashrc
        #
        # TODO: Consider isolating those bashrc files from the overlay and
        # associating them to corresponding packages. Note that we also need
        # to take care of chromiumos-overlay/chromeos/config/env.
        "*/*/*.bashrc",
        "app-shells/bash/files/*.patch",
        "app-shells/dash/files/*.patch",
        "dev-libs/dbus-glib/files/*.patch",
        # openssl uses some files other than *.patch
        "dev-libs/openssl/files/*",
        "dev-python/python-daemon/files/*.patch",
        "sys-apps/kmod/files/*.patch",
        "sys-apps/man-pages/files/*.py",
        "sys-apps/mawk/files/*.patch",
        "sys-devel/bc/files/*.patch",
        "*/*/files/*_waf_config_answers",
    ], exclude = ANALYSIS_FILE_PATTERN + [
        "**/OWNERS",
        "**/README",
        "**/README.md",
        "profiles/**/*.desc",
        "chromeos/binhost/**",
        "chromeos/config/make.conf.amd64-host",
    ]),
    prefix = "{{ mount_path }}",
    # chromeos/scripts/config_wrapper must be executable
    attributes = pkg_attributes(
        mode = "0755",
    ),
    strip_prefix = strip_prefix.from_pkg(),
    visibility = ["//visibility:private"],
)

pkg_tar(
    name = "layer",
    extension = "tar.zst",
    compressor = "@//bazel/portage/repo_defs/zstd",
    compressor_args = "--threads=0",
    srcs = [":files", ":amd64-host-files"],
    visibility = ["//visibility:private"],
)

overlay(
    name = "{{ name }}",
    path = "/{{ mount_path }}",
    layer = ":layer",
    visibility = ["@//bazel:internal"],
)

pkg_files(
    name = "files-full",
    srcs = [
        # Required by build_image.
        "sys-boot/grub/files/sbat.csv",
    ] + glob(ANALYSIS_FILE_PATTERN),
    prefix = "{{ mount_path }}",
    strip_prefix = strip_prefix.from_pkg(),
    visibility = ["//visibility:private"],
)

pkg_tar(
    name = "layer-full",
    extension = "tar.zst",
    compressor = "@//bazel/portage/repo_defs/zstd",
    compressor_args = "--threads=0",
    srcs = [":files-full"],
    visibility = ["//visibility:private"],
)

overlay(
    name = "full",
    path = "/{{ mount_path }}",
    layer = ":layer-full",
    visibility = ["@//bazel:internal"],
)
