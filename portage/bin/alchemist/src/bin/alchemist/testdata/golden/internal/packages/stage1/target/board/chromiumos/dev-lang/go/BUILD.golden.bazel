# AUTO-GENERATED FILE. DO NOT EDIT.

# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@//bazel/cros_pkg/private:direct_ebuild.bzl", "direct_ebuild")
load("@//bazel/portage/build_defs:binary_package.bzl", "add_runtime_deps")
load("@//bazel/portage/build_defs:ebuild.bzl", "ebuild", "ebuild_debug", "ebuild_install", "ebuild_install_action", "ebuild_install_list", "ebuild_test", "ebuild_compare_package_test")
load("@//bazel/portage/build_defs:package_set.bzl", "package_set")
load("@//bazel/portage/build_defs:sdk.bzl", "sdk_install_deps")
load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
alias(
    name = "1.20.5_host_deps",
    actual = "//internal/sdk/stage1/target/board",
    visibility = ["//visibility:private"],
)

alias(
    name = "1.20.5_deps",
    actual = "1.20.5_host_deps",
    visibility = ["//visibility:private"],
)

alias(
    name = "1.20.5_test_deps",
    actual = "1.20.5_host_deps",
    visibility = ["//visibility:private"],
)
string_flag(
    name = "1.20.5_prebuilt",
    build_setting_default = "",
    visibility = ["//:__subpackages__"],
)

bool_flag(
    name = "1.20.5_incremental",
    build_setting_default = False,
)

config_setting(
    name = "1.20.5_incremental_enabled",
    flag_values = {":1.20.5_incremental": "true"},
)

write_file(
    name = "1.20.5_cache_marker",
    out = "1.20.5_incremental/MARKER",
)

bool_flag(
    name = "1.20.5_ccache",
    build_setting_default = False,
)

config_setting(
    name = "1.20.5_ccache_enabled_local",
    flag_values = {
        ":1.20.5_ccache": "True",
    },
)

ebuild(
    name = "1.20.5",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    index = 0,
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled_profiles_enabled": True,
        "@//bazel/portage:compiled_profiles_disabled": False,
    }),
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_deps",
    overlays = "//internal/overlays:board",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/board",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/board:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-generic/base:profile.bashrc",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [],
    }),
    incremental_cache_marker = select({
        ":1.20.5_incremental_enabled": ":1.20.5_cache_marker",
        "//conditions:default": None,
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    prebuilt = ":1.20.5_prebuilt",
    portage_profile_test_package = select({
        "@//bazel/portage:portage_config_validator_enabled": ":1.20.5_portage_profile_test_package",
        "@//bazel/portage:portage_config_validator_disabled": None,
    }),
    visibility = ["//:__subpackages__"],
)

add_runtime_deps(
    name = "1.20.5_including_provided",
    binpkg = ":1.20.5",
    runtime_deps = [
    ],
    visibility = ["//:__subpackages__"],
)

ebuild_debug(
    name = "1.20.5_debug",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled_profiles_enabled": True,
        "@//bazel/portage:compiled_profiles_disabled": False,
    }),
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_deps",
    overlays = "//internal/overlays:board",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/board",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/board:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-generic/base:profile.bashrc",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [],
    }),
    incremental_cache_marker = select({
        ":1.20.5_incremental_enabled": ":1.20.5_cache_marker",
        "//conditions:default": None,
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    visibility = ["//:__subpackages__"],
)

string_flag(
    name = "1.20.5_hermetic_test_package_prebuilt",
    build_setting_default = "",
    visibility = ["//:__subpackages__"],
)

bool_flag(
    name = "1.20.5_hermetic_test_package_incremental",
    build_setting_default = False,
)

config_setting(
    name = "1.20.5_hermetic_test_package_incremental_enabled",
    flag_values = {":1.20.5_hermetic_test_package_incremental": "true"},
)

write_file(
    name = "1.20.5_hermetic_test_package_cache_marker",
    out = "1.20.5_hermetic_test_package_incremental/MARKER",
)

bool_flag(
    name = "1.20.5_hermetic_test_package_ccache",
    build_setting_default = False,
)

config_setting(
    name = "1.20.5_hermetic_test_package_ccache_enabled_local",
    flag_values = {
        ":1.20.5_hermetic_test_package_ccache": "True",
    },
)

ebuild(
    name = "1.20.5_hermetic_test_package",
    suffix = "_hermetic_test_package",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    index = 1,
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled_profiles_enabled": True,
        "@//bazel/portage:compiled_profiles_disabled": False,
    }),
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_deps",
    overlays = "//internal/overlays:board",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/board",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/board:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-generic/base:profile.bashrc",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [],
    }),
    incremental_cache_marker = select({
        ":1.20.5_hermetic_test_package_incremental_enabled": ":1.20.5_hermetic_test_package_cache_marker",
        "//conditions:default": None,
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_hermetic_test_package_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    prebuilt = ":1.20.5_hermetic_test_package_prebuilt",
    visibility = ["//:__subpackages__"],
)

add_runtime_deps(
    name = "1.20.5_hermetic_test_package_including_provided",
    binpkg = ":1.20.5",
    runtime_deps = [
    ],
    visibility = ["//:__subpackages__"],
)

ebuild_debug(
    name = "1.20.5_hermetic_test_package_debug",
    suffix = "_hermetic_test_package",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled_profiles_enabled": True,
        "@//bazel/portage:compiled_profiles_disabled": False,
    }),
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_deps",
    overlays = "//internal/overlays:board",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/board",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/board:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-generic/base:profile.bashrc",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [],
    }),
    incremental_cache_marker = select({
        ":1.20.5_hermetic_test_package_incremental_enabled": ":1.20.5_hermetic_test_package_cache_marker",
        "//conditions:default": None,
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_hermetic_test_package_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    visibility = ["//:__subpackages__"],
)

string_flag(
    name = "1.20.5_portage_profile_test_package_prebuilt",
    build_setting_default = "",
    visibility = ["//:__subpackages__"],
)

bool_flag(
    name = "1.20.5_portage_profile_test_package_incremental",
    build_setting_default = False,
)

config_setting(
    name = "1.20.5_portage_profile_test_package_incremental_enabled",
    flag_values = {":1.20.5_portage_profile_test_package_incremental": "true"},
)

write_file(
    name = "1.20.5_portage_profile_test_package_cache_marker",
    out = "1.20.5_portage_profile_test_package_incremental/MARKER",
)

bool_flag(
    name = "1.20.5_portage_profile_test_package_ccache",
    build_setting_default = False,
)

config_setting(
    name = "1.20.5_portage_profile_test_package_ccache_enabled_local",
    flag_values = {
        ":1.20.5_portage_profile_test_package_ccache": "True",
    },
)

ebuild(
    name = "1.20.5_portage_profile_test_package",
    suffix = "_portage_profile_test_package",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    index = 2,
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = False,
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_deps",
    overlays = "//internal/overlays:board-full",
    eclasses = [
    ],
    portage_config = [
        "//internal/portage-config/host:orig",
        "//internal/portage-config/target/board:full",
    ],
    incremental_cache_marker = select({
        ":1.20.5_portage_profile_test_package_incremental_enabled": ":1.20.5_portage_profile_test_package_cache_marker",
        "//conditions:default": None,
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_portage_profile_test_package_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    prebuilt = ":1.20.5_portage_profile_test_package_prebuilt",
    visibility = ["//:__subpackages__"],
)

add_runtime_deps(
    name = "1.20.5_portage_profile_test_package_including_provided",
    binpkg = ":1.20.5",
    runtime_deps = [
    ],
    visibility = ["//:__subpackages__"],
)

ebuild_debug(
    name = "1.20.5_portage_profile_test_package_debug",
    suffix = "_portage_profile_test_package",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = False,
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_deps",
    overlays = "//internal/overlays:board-full",
    eclasses = [
    ],
    portage_config = [
        "//internal/portage-config/host:orig",
        "//internal/portage-config/target/board:full",
    ],
    incremental_cache_marker = select({
        ":1.20.5_portage_profile_test_package_incremental_enabled": ":1.20.5_portage_profile_test_package_cache_marker",
        "//conditions:default": None,
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_portage_profile_test_package_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    visibility = ["//:__subpackages__"],
)
ebuild_install(
    name = "1.20.5_install",
    ebuild = "go-1.20.5.ebuild",
    category = "dev-lang",
    board = "amd64-generic",
    packages = [
        "//internal/packages/stage1/target/board/chromiumos/dev-lang/go:1.20.5",
    ],
    visibility = ["//:__subpackages__"],
)

ebuild_install_action(
    name = "1.20.5_installed_no_pdepends",
    board = "amd64-generic",
    package = ":1.20.5",
    requires = [
    ],
    visibility = ["//:__subpackages__"],
)

filegroup(
    name = "1.20.5_installed",
    srcs = [
        "//internal/packages/stage1/target/board/chromiumos/dev-lang/go:1.20.5_installed_no_pdepends",
    ],
    visibility = ["//:__subpackages__"],
)
ebuild_install_list(
    name = "1.20.5_install_list",
    ebuild = "go-1.20.5.ebuild",
    category = "dev-lang",
    board = "amd64-generic",
    packages = [
        "//internal/packages/stage1/target/board/chromiumos/dev-lang/go:1.20.5",
    ],
    visibility = ["//:__subpackages__"],
)
ebuild_test(
    name = "1.20.5_test",
    ebuild = "go-1.20.5.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "dev-lang",
    package_name = "go",
    version = "1.20.5",
    slot = "0/0",
    distfiles = select({
        "@//bazel/portage:omit_ebuild_src_enabled": {},
        "@//bazel/portage:omit_ebuild_src_disabled": {
        },
    }),
    srcs = select({
        "@//bazel/portage:omit_ebuild_src_enabled": [],
        "@//bazel/portage:omit_ebuild_src_disabled": [
            "//internal/sources/src/scripts/hooks:__tarballs__",
            "@chromite//:src",
        ],
    }),
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled_profiles_enabled": True,
        "@//bazel/portage:compiled_profiles_disabled": False,
    }),
    files = glob(["cros/**", "files/**", "*.bashrc"]),
    board = "amd64-generic",
    sdk = ":1.20.5_test_deps",
    overlays = "//internal/overlays:board",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/board",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/board:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled_profiles_enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-generic/base:profile.bashrc",
        ],
        "@//bazel/portage:compiled_profiles_disabled": [],
    }),
    ccache = selects.with_or({
        ("@//bazel/portage:ccache_enabled_global", ":1.20.5_ccache_enabled_local"): True,
        "//conditions:default": False,
    }),
    # Bazel sandbox interferes with restoring permissions in durable trees.
    tags = ["no-sandbox"],
    visibility = ["//:__subpackages__"],
)

ebuild_compare_package_test(
    name = "1.20.5_hermetic_test",
    packages = [
        ":1.20.5",
        ":1.20.5_hermetic_test_package",
    ],
    size="small",
)

test_suite(
    name = "1.20.5_package_set_hermetic_test",
    tests = [
        "//internal/packages/stage1/target/board/chromiumos/dev-lang/go:1.20.5_hermetic_test",
    ],
    visibility = ["//:__subpackages__"],
)

package_set(
    name = "1.20.5_package_set",
    deps = [
        "//internal/packages/stage1/target/board/chromiumos/dev-lang/go:1.20.5",
    ],
    visibility = ["//:__subpackages__"],
)


