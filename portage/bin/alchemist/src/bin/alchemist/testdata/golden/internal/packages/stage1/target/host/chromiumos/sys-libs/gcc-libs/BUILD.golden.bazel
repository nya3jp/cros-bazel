# AUTO-GENERATED FILE. DO NOT EDIT.

# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@//bazel/cros_pkg/private:direct_ebuild.bzl", "direct_ebuild")
load("@//bazel/portage/build_defs:binary_package.bzl", "add_runtime_deps")
load("@//bazel/portage/build_defs:ebuild.bzl", "ebuild", "ebuild_debug", "ebuild_install", "ebuild_install_list", "ebuild_test", "ebuild_compare_package_test")
load("@//bazel/portage/build_defs:package_set.bzl", "package_set")
load("@//bazel/portage/build_defs:sdk.bzl", "sdk_install_deps")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
alias(
    name = "10.2.0_host_deps",
    actual = "//internal/sdk/stage1/target/host:base",
    visibility = ["//visibility:private"],
)

alias(
    name = "10.2.0_deps",
    actual = "10.2.0_host_deps",
    visibility = ["//visibility:private"],
)

alias(
    name = "10.2.0_test_deps",
    actual = "10.2.0_host_deps",
    visibility = ["//visibility:private"],
)
string_flag(
    name = "10.2.0_prebuilt",
    build_setting_default = "",
    visibility = ["@//bazel:internal"],
)

bool_flag(
    name = "10.2.0_incremental",
    build_setting_default = False,
)

config_setting(
    name = "10.2.0_incremental_enabled",
    flag_values = {":10.2.0_incremental": "true"},
)

write_file(
    name = "10.2.0_cache_marker",
    out = "10.2.0_incremental/MARKER",
)

ebuild(
    name = "10.2.0",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled-profiles-enabled": True,
        "@//bazel/portage:compiled-profiles-disabled": False,
    }),
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_deps",
    overlays = "//internal/overlays:host",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/host",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/host:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-host/sdk/bootstrap:profile.bashrc",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [],
    }),
    incremental_cache_marker = select({
        ":10.2.0_incremental_enabled": ":10.2.0_cache_marker",
        "//conditions:default": None,
    }),
    prebuilt = ":10.2.0_prebuilt",
    portage_profile_test_package = select({
        "@//bazel/portage:portage-config-validator-enabled": ":10.2.0_portage_profile_test_package",
        "@//bazel/portage:portage-config-validator-disabled": None,
    }),
    visibility = ["@//bazel:internal"],
)

add_runtime_deps(
    name = "10.2.0_including_provided",
    binpkg = ":10.2.0",
    runtime_deps = [
    ],
    visibility = ["@//bazel:internal"],
)

ebuild_debug(
    name = "10.2.0_debug",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled-profiles-enabled": True,
        "@//bazel/portage:compiled-profiles-disabled": False,
    }),
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_deps",
    overlays = "//internal/overlays:host",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/host",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/host:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-host/sdk/bootstrap:profile.bashrc",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [],
    }),
    incremental_cache_marker = select({
        ":10.2.0_incremental_enabled": ":10.2.0_cache_marker",
        "//conditions:default": None,
    }),
    visibility = ["@//bazel:internal"],
)

string_flag(
    name = "10.2.0_hermetic_test_package_prebuilt",
    build_setting_default = "",
    visibility = ["@//bazel:internal"],
)

bool_flag(
    name = "10.2.0_hermetic_test_package_incremental",
    build_setting_default = False,
)

config_setting(
    name = "10.2.0_hermetic_test_package_incremental_enabled",
    flag_values = {":10.2.0_hermetic_test_package_incremental": "true"},
)

write_file(
    name = "10.2.0_hermetic_test_package_cache_marker",
    out = "10.2.0_hermetic_test_package_incremental/MARKER",
)

ebuild(
    name = "10.2.0_hermetic_test_package",
    suffix = "_hermetic_test_package",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled-profiles-enabled": True,
        "@//bazel/portage:compiled-profiles-disabled": False,
    }),
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_deps",
    overlays = "//internal/overlays:host",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/host",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/host:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-host/sdk/bootstrap:profile.bashrc",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [],
    }),
    incremental_cache_marker = select({
        ":10.2.0_hermetic_test_package_incremental_enabled": ":10.2.0_hermetic_test_package_cache_marker",
        "//conditions:default": None,
    }),
    prebuilt = ":10.2.0_hermetic_test_package_prebuilt",
    visibility = ["@//bazel:internal"],
)

add_runtime_deps(
    name = "10.2.0_hermetic_test_package_including_provided",
    binpkg = ":10.2.0",
    runtime_deps = [
    ],
    visibility = ["@//bazel:internal"],
)

ebuild_debug(
    name = "10.2.0_hermetic_test_package_debug",
    suffix = "_hermetic_test_package",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled-profiles-enabled": True,
        "@//bazel/portage:compiled-profiles-disabled": False,
    }),
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_deps",
    overlays = "//internal/overlays:host",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/host",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/host:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-host/sdk/bootstrap:profile.bashrc",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [],
    }),
    incremental_cache_marker = select({
        ":10.2.0_hermetic_test_package_incremental_enabled": ":10.2.0_hermetic_test_package_cache_marker",
        "//conditions:default": None,
    }),
    visibility = ["@//bazel:internal"],
)

string_flag(
    name = "10.2.0_portage_profile_test_package_prebuilt",
    build_setting_default = "",
    visibility = ["@//bazel:internal"],
)

bool_flag(
    name = "10.2.0_portage_profile_test_package_incremental",
    build_setting_default = False,
)

config_setting(
    name = "10.2.0_portage_profile_test_package_incremental_enabled",
    flag_values = {":10.2.0_portage_profile_test_package_incremental": "true"},
)

write_file(
    name = "10.2.0_portage_profile_test_package_cache_marker",
    out = "10.2.0_portage_profile_test_package_incremental/MARKER",
)

ebuild(
    name = "10.2.0_portage_profile_test_package",
    suffix = "_portage_profile_test_package",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = False,
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_deps",
    overlays = "//internal/overlays:host-full",
    eclasses = [
    ],
    portage_config = [
        "//internal/portage-config/host:orig",
        "//internal/portage-config/target/host:full",
    ],
    incremental_cache_marker = select({
        ":10.2.0_portage_profile_test_package_incremental_enabled": ":10.2.0_portage_profile_test_package_cache_marker",
        "//conditions:default": None,
    }),
    prebuilt = ":10.2.0_portage_profile_test_package_prebuilt",
    visibility = ["@//bazel:internal"],
)

add_runtime_deps(
    name = "10.2.0_portage_profile_test_package_including_provided",
    binpkg = ":10.2.0",
    runtime_deps = [
    ],
    visibility = ["@//bazel:internal"],
)

ebuild_debug(
    name = "10.2.0_portage_profile_test_package_debug",
    suffix = "_portage_profile_test_package",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = False,
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_deps",
    overlays = "//internal/overlays:host-full",
    eclasses = [
    ],
    portage_config = [
        "//internal/portage-config/host:orig",
        "//internal/portage-config/target/host:full",
    ],
    incremental_cache_marker = select({
        ":10.2.0_portage_profile_test_package_incremental_enabled": ":10.2.0_portage_profile_test_package_cache_marker",
        "//conditions:default": None,
    }),
    visibility = ["@//bazel:internal"],
)
ebuild_install(
    name = "10.2.0_install",
    ebuild = "gcc-libs-10.2.0.ebuild",
    category = "sys-libs",
    board = "amd64-host",
    packages = [
        "//internal/packages/stage1/target/host/chromiumos/sys-libs/gcc-libs:10.2.0",
    ],
    visibility = ["@//bazel:internal"],
)
ebuild_install_list(
    name = "10.2.0_install_list",
    ebuild = "gcc-libs-10.2.0.ebuild",
    category = "sys-libs",
    board = "amd64-host",
    packages = [
        "//internal/packages/stage1/target/host/chromiumos/sys-libs/gcc-libs:10.2.0",
    ],
    visibility = ["@//bazel:internal"],
)
ebuild_test(
    name = "10.2.0_test",
    ebuild = "gcc-libs-10.2.0.ebuild",
    overlay = "//internal/overlays/chromiumos",
    category = "sys-libs",
    package_name = "gcc-libs",
    version = "10.2.0",
    slot = "0/0",
    distfiles = {
    },
    srcs = [
        "//internal/sources/src/scripts/hooks:__tarballs__",
        "@chromite//:src",
    ],
    use_flags = [
        "amd64",
        "elibc_glibc",
        "kernel_linux",
        "userland_GNU",
        "-alpha",
        "-amd64-fbsd",
        "-amd64-linux",
        "-arm",
        "-arm-linux",
        "-arm64",
        "-elibc_FreeBSD",
        "-elibc_musl",
        "-kernel_FreeBSD",
        "-prefix",
        "-prefix-guest",
        "-prefix-stack",
        "-userland_BSD",
    ],
    inject_use_flags = select({
        "@//bazel/portage:compiled-profiles-enabled": True,
        "@//bazel/portage:compiled-profiles-disabled": False,
    }),
    files = glob(["files/**", "*.bashrc"]),
    board = "amd64-host",
    sdk = ":10.2.0_test_deps",
    overlays = "//internal/overlays:host",
    eclasses = [
    ],
    portage_config = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/portage-config/host:lite",
            "//internal/portage-config/target/host",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [
            "//internal/portage-config/host:orig",
            "//internal/portage-config/target/host:full",
        ],
    }),
    bashrcs = select({
        "@//bazel/portage:compiled-profiles-enabled": [
            "//internal/bashrcs/chromiumos/base:profile.bashrc",
            "//internal/bashrcs/amd64-host/sdk/bootstrap:profile.bashrc",
        ],
        "@//bazel/portage:compiled-profiles-disabled": [],
    }),
    # Bazel sandbox interferes with restoring permissions in durable trees.
    tags = ["no-sandbox"],
    visibility = ["@//bazel:internal"],
)

ebuild_compare_package_test(
    name = "10.2.0_hermetic_test",
    packages = [
        ":10.2.0",
        ":10.2.0_hermetic_test_package",
    ],
    size="small",
)

test_suite(
    name = "10.2.0_package_set_hermetic_test",
    tests = [
        "//internal/packages/stage1/target/host/chromiumos/sys-libs/gcc-libs:10.2.0_hermetic_test",
    ],
    visibility = ["@//bazel:internal"],
)

package_set(
    name = "10.2.0_package_set",
    deps = [
        "//internal/packages/stage1/target/host/chromiumos/sys-libs/gcc-libs:10.2.0",
    ],
    visibility = ["@//bazel:internal"],
)


