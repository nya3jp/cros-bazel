# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
load("//bazel/bash:defs.bzl", "custom_args_binary", "custom_args_test", "sh_runfiles_binary")
load("//bazel/portage/build_defs:common.bzl", "RUSTC_DEBUG_FLAGS")
load(":src.bzl", "ALCHEMIST_BAZEL_LIB_SRCS")

exports_files(
    ["Cargo.toml"],
    visibility = ["//bazel/rust:__pkg__"],
)

# Even with --deleted_packages, glob(["src/**"]) won't pick up on any packages
# with build files. However, --deleted_packages does allow you to explicitly
# write ":foo/BUILD.bazel".
filegroup(
    name = "srcs",
    srcs = ALCHEMIST_BAZEL_LIB_SRCS + ["//bazel/portage/bin/alchemist/src/bin/alchemist:srcs"],
)

rust_library(
    name = "alchemist_lib",
    srcs = glob(
        ["src/**/*.rs"],
    ),
    compile_data = glob(
        ["src/**/*"],
        exclude = [
            "src/**/*.rs",
        ],
    ),
    crate_name = "alchemist",
    proc_macro_deps = [
        "@alchemy_crates//:strum_macros",
    ],
    rustc_flags = RUSTC_DEBUG_FLAGS,
    visibility = ["//visibility:public"],
    deps = [
        "//bazel/portage/common/portage/version",
        "@alchemy_crates//:anyhow",
        "@alchemy_crates//:base64",
        "@alchemy_crates//:hex",
        "@alchemy_crates//:itertools",
        "@alchemy_crates//:lazy_static",
        "@alchemy_crates//:nix",
        "@alchemy_crates//:nom",
        "@alchemy_crates//:nom-regex",
        "@alchemy_crates//:nom_locate",
        "@alchemy_crates//:once_cell",
        "@alchemy_crates//:rayon",
        "@alchemy_crates//:regex",
        "@alchemy_crates//:serde",
        "@alchemy_crates//:serde_json",
        "@alchemy_crates//:sha2",
        "@alchemy_crates//:strum",
        "@alchemy_crates//:tempfile",
        "@alchemy_crates//:tera",
        "@alchemy_crates//:toml",
        "@alchemy_crates//:tracing",
        "@alchemy_crates//:url",
        "@alchemy_crates//:walkdir",
    ],
)

rust_test(
    name = "alchemist_lib_test",
    size = "small",
    crate = ":alchemist_lib",
    rustc_flags = RUSTC_DEBUG_FLAGS,
    deps = [
        "@alchemy_crates//:pretty_assertions",
        "@alchemy_crates//:proptest",
        "@alchemy_crates//:shell-escape",
    ],
)

sh_runfiles_binary(
    name = "cargo",
    src = "cargo.sh",
    data = [
        ":srcs",
        "@rust_host_tools//:cargo",
        "@rust_host_tools//:rustc",
        "@rust_host_tools//:rustdoc",
    ],
)

custom_args_binary(
    name = "build",
    binary = ":cargo",
    binary_args = [
        "build",
        "--package",
        "alchemist",
    ],
)

# Note that running "bazel build :alchemist" won't build alchemist.
# To do that, run "bazel build :build"
custom_args_binary(
    name = "alchemist",
    binary = ":cargo",
    binary_args = [
        "run",
        "--package",
        "alchemist",
        "--",
    ],
)

custom_args_test(
    name = "alchemist_test",
    # If it's not cached, it can be quite slow to download all the dependencies.
    size = "medium",
    binary = ":cargo",
    binary_args = [
        "test",
        "--package",
        "alchemist",
    ],
    # We require network access to download from crates.io, and require
    # disabling the sandbox to write them to the local cache of the registry.
    tags = [
        "no-sandbox",
        "requires-network",
    ],
)
