From 4a0c31408f3bbb6a29ca1b0d62a266abf4758263 Mon Sep 17 00:00:00 2001
From: Raul E Rangel <rrangel@chromium.org>
Date: Fri, 22 Sep 2023 15:54:28 -0600
Subject: [PATCH] b/293714014 - Print extra logging in check_locale

We are deadlocking for some reason. Print out some status so we know
what's happening.

BUG=b:293714014
TEST=sudo emerge -av virtual/os-headers and see logs printed to stdout

Change-Id: Ia91fb14c2e61abd56e03ef74bdf0dfe920adf15c
---
 usr/PYTHON_LIBDIR/PYTHON_VERSION/site-packages/portage/util/locale.py | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/usr/PYTHON_LIBDIR/PYTHON_VERSION/site-packages/portage/util/locale.py b/usr/PYTHON_LIBDIR/PYTHON_VERSION/site-packages/portage/util/locale.py
index 5b09945d66..234e78a444 100644
--- a/usr/PYTHON_LIBDIR/PYTHON_VERSION/site-packages/portage/util/locale.py
+++ b/usr/PYTHON_LIBDIR/PYTHON_VERSION/site-packages/portage/util/locale.py
@@ -11,6 +11,8 @@ from __future__ import absolute_import, unicode_literals
 import locale
 import logging
 import os
+import signal
+import subprocess
 import textwrap
 import traceback
 
@@ -79,6 +81,9 @@ def _check_locale(silent):
 
 	return True
 
+def debug_signal(_signum, _frame):
+	import pdb
+	pdb.set_trace()
 
 def check_locale(silent=False, env=None):
 	"""
@@ -100,9 +105,15 @@ def check_locale(silent=False, env=None):
 		except KeyError:
 			pass
 
+	print("check_locale(%d): Checking locale" % (os.getpid()))
+
 	pid = os.fork()
 	if pid == 0:
 		try:
+			print("check_locale(%d): I'm alive" % (os.getpid()), flush=True)
+			subprocess.run(['/bin/bash', '-c', 'data="$(echo "---"; ps fx)"; echo "$data"'])
+			signal.signal(signal.SIGUSR1, debug_signal)
+			
 			if env is not None:
 				try:
 					locale.setlocale(locale.LC_CTYPE,
@@ -111,6 +122,8 @@ def check_locale(silent=False, env=None):
 					os._exit(2)
 
 			ret = _check_locale(silent)
+
+			print("check_locale(%d): ret=%d" % (os.getpid(), ret), flush=True)
 			if ret is None:
 				os._exit(2)
 			else:
@@ -119,6 +132,7 @@ def check_locale(silent=False, env=None):
 			traceback.print_exc()
 			os._exit(2)
 
+	print("check_locale(%d): Waiting for pid %d" % (os.getpid(), pid))
 	pid2, ret = os.waitpid(pid, 0)
 	assert pid == pid2
 	pyret = None
@@ -129,6 +143,7 @@ def check_locale(silent=False, env=None):
 
 	if env is not None:
 		_check_locale_cache[mylocale] = pyret
+	print("check_locale(%d): ret=%d" % (os.getpid(), pyret))
 	return pyret
 
 
-- 
2.42.0.515.g380fc7ccd1-goog

