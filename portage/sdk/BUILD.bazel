# Copyright 2022 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("//bazel/portage/build_defs:sdk.bzl", "remote_toolchain_inputs", "sdk_from_archive", "sdk_update")

pkg_tar(
    name = "extra_tarball",
    srcs = [
        "//bazel/portage/sdk/etc",
        "//bazel/portage/sdk/run/lock",
        "//bazel/portage/sdk/usr/bin",
        "//bazel/portage/sdk/usr/lib64",
        "//bazel/portage/sdk/usr/src",
    ],
    extension = "tar.gz",
    visibility = ["@portage//:__subpackages__"],
)

sdk_from_archive(
    name = "sdk_from_archive",
    src = select({
        "//bazel/portage:use_cros_bazel_sdk_disabled": "@files//:cros-sdk",
        "//bazel/portage:use_cros_bazel_sdk_enabled": "@files//:cros-bazel-sdk",
    }),
    progress_message = "Extracting bootstrap SDK tarball",
    # This rule just extracts an archive, do not bother dispatching to remotes.
    tags = ["no-remote"],
)

remote_toolchain_inputs(
    name = "remote_toolchain_inputs",
    sdk = ":sdk_from_archive",
    visibility = ["@portage//:__subpackages__"],
)

# The stage1 bootstrap SDK.
# sdk_update will monkey patch portage and get the SDK setup so we can perform
# rootless builds.
sdk_update(
    name = "stage1",
    base = ":sdk_from_archive",
    extra_tarballs = [
        ":extra_tarball",
        ":remote_toolchain_inputs",
    ],
    visibility = [
        "@//bazel:internal",
        "@portage//:__subpackages__",
    ],
)
