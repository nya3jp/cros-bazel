load("@//bazel/ebuild:defs.bzl", "sdk", "sdk_update", "overlay_set")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_pkg//pkg:mappings.bzl", "pkg_mkdirs", "pkg_filegroup", "pkg_files", "pkg_mklink", "strip_prefix")

pkg_files(
    name = "make_conf_board",
    srcs = [
        "make.conf.board",
        "make.conf.board_setup",
    ],
    strip_prefix = strip_prefix.from_pkg(),
)

pkg_mklink(
    name = "make_conf",
    link_name = "make.conf",
    target = "/mnt/host/source/src/third_party/chromiumos-overlay/chromeos/config/make.conf.generic-target",
)

pkg_mklink(
    name = "make_conf_user",
    link_name = "make.conf.user",
    target = "/etc/make.conf.user",
)

pkg_mklink(
    name = "portage_make_profile",
    link_name = "portage/make.profile",
    target = "{{ profile_path }}",
)

pkg_filegroup(
    name = "etc",
    prefix = "build/{{ board }}/etc",
    srcs = [
        ":make_conf",
        ":make_conf_board",
        ":make_conf_user",
        ":portage_make_profile",
    ],
)

# Create /usr/share/aclocal to make autoconf work.
# TODO: Figure out why this is needed.
pkg_mkdirs(
    name = "aclocal",
    dirs = ["build/{{ board }}/usr/share/aclocal"],
)

pkg_tar(
    name = "board_extra_tarball",
    srcs = [
        # TODO: Do we need to add /build/$BOARD/build/bin helpers?
        ":etc",
        ":aclocal",
    ],
    extension = "tar.gz",
)

overlay_set(
    name = "overlays",
    overlays = [
        {%- for overlay in overlays %}
        "{{ overlay }}",
        {%- endfor %}
    ],
)

sdk(
    name = "base",
    base = "@//bazel/sdk:base_sdk",
    # TODO: Maybe split installing the host deps from installing the board
    # specific items.
    board = "{{ board }}",
    extra_tarballs = [
        "@//bazel/sdk:extra_tarball",
        ":board_extra_tarball",
    ],
    host_deps = [
        # Should we consider adding BDEPEND support to remove these 5?
        "@//bazel/prebuilts/amd64-host:docbook-xml-dtd-4_4",
        "@//bazel/prebuilts/amd64-host:meson-format-array",
        "@//bazel/prebuilts/amd64-host:xcb-proto",
        "@//bazel/prebuilts/amd64-host:hps-sdk",
        "@//bazel/prebuilts/amd64-host:rust",
        {% for triple in triples -%}
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:binutils",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:gcc",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:gdb",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:glibc",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:go",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:libcxx",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:libxcrypt",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:linux-headers",
        "@//bazel/prebuilts/amd64-host/cross-{{ triple }}:llvm-libunwind",
        {%- endfor %}
    ],
    overlays = ":overlays",
    visibility = ["//visibility:public"],
)

sdk_update(
    name = "sdk",
    base = ":base",
    target_deps = [
        # TODO: Remove hard coded version numbers
        "//sys-kernel/linux-headers:4.14-r56",
        "//sys-libs/gcc-libs:10.2.0-r4",
        "//sys-libs/libcxx:15.0_pre458507-r6",
        "//sys-libs/llvm-libunwind:15.0_pre458507-r4",
    ],
    visibility = ["//visibility:public"],
)
