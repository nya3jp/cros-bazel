# Copyright 2023 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

load("@//bazel/ebuild/private:overlay.bzl", "overlay_set")
load("@//bazel/ebuild/private:sdk.bzl", "sdk_extend", "sdk_install_glibc", "sdk_install_deps")

{% if cross_compiler -%}
# We use the toolchain name as the target name, so toolchain SDK layers don't
# get clobbered when building boards with different toolchains.
sdk_install_deps(
    name = "{{ cross_compiler.primary_triple }}",
    base = "{{ base }}",
    overlays = "{{ target_overlay_set }}",
    target_deps = [
        {%- for package in cross_compiler.toolchain_deps %}
            "{{ package }}",
        {%- endfor %}
    ],
    visibility = ["@//bazel:internal"],
)

# The legacy setup_bord flow relied on manually copying glibc into the board's
# SYSROOT instead of compiling glibc for the host. In order to not deviate
# we need to do the same thing.
# TODO(b/266979761): Make legacy flow compile glibc as a normal package.
sdk_install_glibc(
    name = "glibc",
    base = ":{{ cross_compiler.primary_triple }}",
    board = "{{ board }}",
    glibc = "{{ cross_compiler.glibc_target }}",
    visibility = ["@//bazel:internal"],
)
{%- set base = ":glibc" %}
{%- endif %}

sdk_extend(
    name = "base",
    base = "{{ base }}",
    extra_tarballs = [
        # TODO(b/278728702): Stop using the stage1 board_extra_tarball and
        # generate it here instead. Or figure out a better place to put it
        # so it can be shared between the stages.
        "//internal/sdk/stage1/target/{{ name }}:board_extra_tarball",
    ],
    visibility = ["@//bazel:internal"],
)

sdk_install_deps(
    name = "{{ name }}",
    base = ":base",
    board = "{{ board }}",
    overlays = "{{ target_overlay_set }}",
    target_deps = [
    {%- for package in primordial_deps %}
        "{{ package }}",
    {%- endfor %}
    ],
    visibility = ["@//bazel:internal"],
)
